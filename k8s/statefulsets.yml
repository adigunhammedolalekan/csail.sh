apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hostgo-database
spec:
  serviceName: "db-service"
  replicas: 1
  selector:
    matchLabels:
      app: db-service
  template:
    metadata:
      labels:
        app: db-service
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - configMapRef:
                name: db-config
          ports:
            - containerPort: 5432
              name: tcp-port
          volumeMounts:
            - name: db-volume
              mountPath: /var/lib/postgresql/data
              subPath: postgres
  volumeClaimTemplates:
    - metadata:
        name: db-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 5Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-session-store
spec:
  serviceName: "redis-service"
  replicas: 1
  selector:
    matchLabels:
      app: redis-service
  template:
    metadata:
      labels:
        app: redis-service
    spec:
      containers:
        - name: redis-session-store
          image: redis:latest
          ports:
            - containerPort: 6379
              name: tcp-port
          volumeMounts:
            - name: redis-volume
              mountPath: /var/sessions/redis/data
              subPath: redis
  volumeClaimTemplates:
    - metadata:
        name: redis-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 2Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-store
spec:
  serviceName: "storage-service"
  replicas: 1
  selector:
    matchLabels:
      app: storage-service
  template:
    metadata:
      labels:
        app: storage-service
    spec:
      containers:
        - name: release-store-cont
          image: minio/minio
          ports:
            - containerPort: 9000
              name: minio-tcp-port
          volumeMounts:
            - name: object-store-volume
              mountPath: /mnt/data
              subPath: data
          envFrom:
            - configMapRef:
                name: object-store-config
          args:
            - server
            - /data
          # Liveness probe detects situations where MinIO server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          # Readiness probe detects situations where MinIO server instance
          # is not ready to accept connections. Kubernetes automatically
          # stops all the traffic to the pods if readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
  volumeClaimTemplates:
    - metadata:
        name: object-store-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 5Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-proxy-store
spec:
  serviceName: "proxy-redis-service"
  replicas: 1
  selector:
    matchLabels:
      app: proxy-redis-service
  template:
    metadata:
      labels:
        app: proxy-redis-service
    spec:
      containers:
        - name: proxy-redis-store
          image: redis:latest
          ports:
            - containerPort: 6379
              name: tcp-port
          volumeMounts:
            - name: proxy-redis-volume
              mountPath: /var/proxy/redis/data
              subPath: redis
  volumeClaimTemplates:
    - metadata:
        name: proxy-redis-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: git-serv-ss
spec:
  selector:
    matchLabels:
      app: git-service
  serviceName: "git-service"
  template:
    metadata:
      labels:
        app: git-service
    spec:
      containers:
        - name: git-srv-cont
          image: registry.hostgolang.com/gitserver:latest
          env:
            - name: MASTER_PWD
              value: $MASTER_PASSWORD
          ports:
            - containerPort: 4007
              name: tcp-port
          volumeMounts:
            - name: git-serv-vol
              mountPath: /mnt/storage/git
              subPath: git
  volumeClaimTemplates:
    - metadata:
        name: git-serv-vol
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 4Gi

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-session-store1
spec:
  serviceName: "redis-service"
  replicas: 1
  selector:
    matchLabels:
      app: redis-service
  template:
    metadata:
      labels:
        app: redis-service
    spec:
      containers:
        - name: redis-session-store1
          image: redis:latest
          ports:
            - containerPort: 6379
              name: tcp-port
          volumeMounts:
            - name: redis-volume1
              mountPath: /var/sessions/redis/data
              subPath: redis
  volumeClaimTemplates:
    - metadata:
        name: redis-volume1
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: do-block-storage
        resources:
          requests:
            storage: 2Gi
