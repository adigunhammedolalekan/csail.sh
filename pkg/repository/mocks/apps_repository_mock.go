// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saas/hostgolang/pkg/repository (interfaces: AppsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/saas/hostgolang/pkg/types"
	reflect "reflect"
)

// MockAppsRepository is a mock of AppsRepository interface
type MockAppsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAppsRepositoryMockRecorder
}

// MockAppsRepositoryMockRecorder is the mock recorder for MockAppsRepository
type MockAppsRepositoryMockRecorder struct {
	mock *MockAppsRepository
}

// NewMockAppsRepository creates a new mock instance
func NewMockAppsRepository(ctrl *gomock.Controller) *MockAppsRepository {
	mock := &MockAppsRepository{ctrl: ctrl}
	mock.recorder = &MockAppsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAppsRepository) EXPECT() *MockAppsRepositoryMockRecorder {
	return m.recorder
}

// CreateApp mocks base method
func (m *MockAppsRepository) CreateApp(arg0 string, arg1 uint) (*types.App, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateApp", arg0, arg1)
	ret0, _ := ret[0].(*types.App)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateApp indicates an expected call of CreateApp
func (mr *MockAppsRepositoryMockRecorder) CreateApp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApp", reflect.TypeOf((*MockAppsRepository)(nil).CreateApp), arg0, arg1)
}

// GetAccountApps mocks base method
func (m *MockAppsRepository) GetAccountApps(arg0 uint) ([]types.App, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountApps", arg0)
	ret0, _ := ret[0].([]types.App)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountApps indicates an expected call of GetAccountApps
func (mr *MockAppsRepositoryMockRecorder) GetAccountApps(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountApps", reflect.TypeOf((*MockAppsRepository)(nil).GetAccountApps), arg0)
}

// GetApp mocks base method
func (m *MockAppsRepository) GetApp(arg0 string) (*types.App, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApp", arg0)
	ret0, _ := ret[0].(*types.App)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApp indicates an expected call of GetApp
func (mr *MockAppsRepositoryMockRecorder) GetApp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApp", reflect.TypeOf((*MockAppsRepository)(nil).GetApp), arg0)
}
