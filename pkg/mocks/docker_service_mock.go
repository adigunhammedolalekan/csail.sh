// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saas/hostgolang/pkg/services (interfaces: DockerService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockDockerService is a mock of DockerService interface
type MockDockerService struct {
	ctrl     *gomock.Controller
	recorder *MockDockerServiceMockRecorder
}

// MockDockerServiceMockRecorder is the mock recorder for MockDockerService
type MockDockerServiceMockRecorder struct {
	mock *MockDockerService
}

// NewMockDockerService creates a new mock instance
func NewMockDockerService(ctrl *gomock.Controller) *MockDockerService {
	mock := &MockDockerService{ctrl: ctrl}
	mock.recorder = &MockDockerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDockerService) EXPECT() *MockDockerServiceMockRecorder {
	return m.recorder
}

// CopyToContainer mocks base method
func (m *MockDockerService) CopyToContainer(arg0, arg1 string, arg2 io.Reader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CopyToContainer", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CopyToContainer indicates an expected call of CopyToContainer
func (mr *MockDockerServiceMockRecorder) CopyToContainer(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CopyToContainer", reflect.TypeOf((*MockDockerService)(nil).CopyToContainer), arg0, arg1, arg2)
}
