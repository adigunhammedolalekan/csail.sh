// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saas/hostgolang/pkg/services (interfaces: ResourcesService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	res "github.com/saas/hostgolang/pkg/res"
	types "github.com/saas/hostgolang/pkg/types"
	io "io"
	reflect "reflect"
)

// MockResourcesService is a mock of ResourcesService interface
type MockResourcesService struct {
	ctrl     *gomock.Controller
	recorder *MockResourcesServiceMockRecorder
}

// MockResourcesServiceMockRecorder is the mock recorder for MockResourcesService
type MockResourcesServiceMockRecorder struct {
	mock *MockResourcesService
}

// NewMockResourcesService creates a new mock instance
func NewMockResourcesService(ctrl *gomock.Controller) *MockResourcesService {
	mock := &MockResourcesService{ctrl: ctrl}
	mock.recorder = &MockResourcesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResourcesService) EXPECT() *MockResourcesServiceMockRecorder {
	return m.recorder
}

// DeleteResource mocks base method
func (m *MockResourcesService) DeleteResource(arg0 *types.App, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResource", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteResource indicates an expected call of DeleteResource
func (mr *MockResourcesServiceMockRecorder) DeleteResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResource", reflect.TypeOf((*MockResourcesService)(nil).DeleteResource), arg0, arg1)
}

// DeployResource mocks base method
func (m *MockResourcesService) DeployResource(arg0 *types.App, arg1 []types.ResourceEnv, arg2 []types.Environment, arg3 res.Res, arg4 bool) (*types.ResourceDeploymentResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployResource", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*types.ResourceDeploymentResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeployResource indicates an expected call of DeployResource
func (mr *MockResourcesServiceMockRecorder) DeployResource(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployResource", reflect.TypeOf((*MockResourcesService)(nil).DeployResource), arg0, arg1, arg2, arg3, arg4)
}

// Exec mocks base method
func (m *MockResourcesService) Exec(arg0, arg1 string, arg2 []string) (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exec", arg0, arg1, arg2)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Exec indicates an expected call of Exec
func (mr *MockResourcesServiceMockRecorder) Exec(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exec", reflect.TypeOf((*MockResourcesService)(nil).Exec), arg0, arg1, arg2)
}
